bin/hadoop fs -mkdir cf
bin/hadoop fs -put /home/administrator/score.dat cf

bin/hadoop jar /home/administrator/ubuntu/mahout-distribution-0.9/mahout-core-0.9-job.jar org.apache.mahout.cf.taste.hadoop.item.RecommenderJob -i cf -o output2 -s SIMILARITY_COOCCURRENCE -n 

org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender

hadoop fs -get output2 ~/output2


http://blog.fens.me/mahout-recommendation-api/
--output 输出路径
--input   输入路劲
-n      为每个用户推荐的产品数
-u      待推荐的用户列表
-i      待推荐的 item 列表
-f      过滤指定用户不需要推荐的 item 。格式为 userID, itemID 对
-b      输入的样本不带产品评分
-mp    设置每个用户喜好的最大数量 默认 10
-m     设置每个用户喜好的最小数量 默认 1
-mo    样本抽样
-s      相似度量方法。包括：
SIMILARITY_URRENCE(DistributedurrenceVectorSimilarity.class),
SIMILARITY_EUCLIDEAN_DISTANCE(DistributedEuclideanDistanceVectorSimilarity.class),
SIMILARITY_LOGLIKELIHOOD(DistributedLoglikelihoodVectorSimilarity.class),
SIMILARITY_PEARSON_CORRELATION(DistributedPearsonCorrelationVectorSimilarity.class),
SIMILARITY_TANIMOTO_COEFFICIENT(DistributedTanimotoCoefficientVectorSimilarity.class),
SIMILARITY_UNCENTERED_COSINE(DistributedUncenteredCosineVectorSimilarity.class),
SIMILARITY_UNCENTERED_ZERO_ASSUMING_COSINE(DistributedUncenteredZeroAssumingCosineVectorSimilarity.class),
SIMILARITY_CITY_BLOCK(DistributedCityBlockVectorSimilarity.class); 

Mahout 中基于 item 的推荐包括 12 个 MapReduce 过程。下面对每一个 MapReduce 的作用进行描述。 输入的数据以 userid  “\t” itemid  “\t”  perferenceValue 格式输入，分别表示用户编号、产品编号和该用户对该产品的评分值。

(1)      第 1 个 MapReduce ：将 itemID 长整型映射到整型的序号上。这样做的目的是为后续以该序号为矩阵的一个维度，所以需要处理成整型。

(2)      第 2 个 MapReduce ：统计每个用户对哪些 item 进行了评分，评分值是多少。

(3)      第 3 个 MapReduce ：统计用户的总数。

(4)      第 4 个 MapReduce ：统计每个 item 被哪些用户评分了，评分值是多少。

(5)      第 5,6,7 个 MapReduce ：计算每个 item 与所有 item 之间的相似度。

(6)      第 8 个 MapReduce ：将相同 item 之间的相似度置为 NaN 。

(7)      第 9 个 MapReduce ：确定要推荐的用户，这些用户对哪些 item 进行了评分，评分值是多少。

(8)      第 10 个 MapReduce ：根据以上的统计结果得到每个 item 与其他 item 之间的相似度，这些 item 分别被哪些用户评分了，评分值是多少。

(9)      第 11 个 MapReduce ：过滤掉指定用户不需要推荐的 item 。

(10)   第 12 个 MapReduce ：得到每个用户要推荐的 item 。这些 item 对于该用户来说是评分最高的前 n 个
